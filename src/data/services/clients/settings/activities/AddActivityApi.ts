/**
 * Socle Symfony2 API
 * Documented API for Socle symfony2
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import {Inject, Injectable, Optional}                      from '@angular/core';
import {Http, Headers, URLSearchParams}                    from '@angular/http';
import {RequestMethod, RequestOptions, RequestOptionsArgs} from '@angular/http';
import {Response, ResponseContentType}                     from '@angular/http';

import {Observable}                                        from 'rxjs/Observable';
import 'rxjs/add/operator/map';

import * as models                                           from './models';
import {BASE_PATH, COLLECTION_FORMATS}                     from '../../variables';
import {Configuration}                                     from '../../configuration';
import{urlPath} from '../../basePath';

/* tslint:disable:no-unused-variable member-ordering */


@Injectable()
export class AddActivityApi {
  protected basePath = urlPath;
  public defaultHeaders: Headers = new Headers();
  public configuration: Configuration = new Configuration();

  constructor(protected http: Http, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {
    if (basePath) {
      this.basePath = basePath;
    }
    if (configuration) {
      this.configuration = configuration;
    }
  }

  /**
   * add Activity
   *
   * @param body The Activity Object to create.
   */
  public addActivity(body: models.Activity, extraHttpRequestParams?: any): Observable<models.Activity> {
    return this.addActivityWithHttpInfo(body, extraHttpRequestParams)
      .map((response: Response) => {
        if (response.status === 204) {
          return undefined;
        } else {
          return response.json();
        }
      });
  }


  /**
   * add Activity
   *
   * @param body The Activity Object to create.
   */
  public addActivityWithHttpInfo(body: models.Activity, extraHttpRequestParams?: any): Observable<Response> {
    const path = this.basePath + `/api/activities`;

    let queryParameters = new URLSearchParams();
    let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845
    // verify required parameter 'body' is not null or undefined
    if (body === null || body === undefined) {
      throw new Error('Required parameter body was null or undefined when calling addActivity.');
    }
    // to determine the Content-Type header
    let consumes: string[] = [
      'application/json'
    ];

    // to determine the Accept header
    let produces: string[] = [
      'application/json'
    ];

    headers.set('Content-Type', 'application/json');

    let requestOptions: RequestOptionsArgs = new RequestOptions({
      method: RequestMethod.Post,
      headers: headers,
      body: body == null ? '' : JSON.stringify(body), // https://github.com/angular/angular/issues/10612
      search: queryParameters
    });

    // https://github.com/swagger-api/swagger-codegen/issues/4037
    if (extraHttpRequestParams) {
      requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);
    }

    return this.http.request(path, requestOptions);
  }

}
